package model.gameboard;

import model.cell.Cell;
import model.cell.SemiCircle;
import model.cell.Square;
import model.gem.Gem;

public class GameBoard {
	private Cell[] gameboard = new Cell[12];
	
	public GameBoard() {
		for(int i=0; i<12; i++) {
			if(i%6==0) {
				this.gameboard[i] = new SemiCircle();
			} else {
				this.gameboard[i] = new Square();
			}
		}
	}
	
	public void showGameBoardxxx() {
		for (int i=0; i<12;i++) {
			this.gameboard[i].showCell();
		}
	}
	
	public int moveGemClockwise1Cell(int i) {
		int j = 1;
		for (Gem gem : this.gameboard[i].getGemInCell()) {
			this.gameboard[(i+j)%12].getGemInCell().add(gem);
			j++;
		}
		this.gameboard[i].getGemInCell().clear();
		return (i+j)%12;
	}
	
	public void moveGemClockwise(int index) {
		int k = this.moveGemClockwise1Cell(index);
		while (this.gameboard[k].getGemInCell().size() != 0) {
			if (k==11) {
				k = this.moveGemClockwise1Cell(0);
			}else {
				k = this.moveGemClockwise1Cell(k);
			}
		}
	}
	
	
	public int moveGemCounterclockwise1Cell(int i) {
		int j = 1;
		for (Gem gem : this.gameboard[i].getGemInCell()) {
			this.gameboard[(12+i-j)%12].getGemInCell().add(gem);
			j++;
		}
		this.gameboard[i].getGemInCell().clear();
		return (12+i-j)%12;
	}
	
	public void moveGemCounterclockwise(int index) {
		int k = this.moveGemCounterclockwise1Cell(index);
		while (this.gameboard[k].getGemInCell().size() != 0) {
			if (k==0) {
				k = this.moveGemCounterclockwise1Cell(11);
			}else {
				k = this.moveGemCounterclockwise1Cell(k);
			}
		}
	}
	
}
